<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, June 17, 2015, 5:24 PM -->
<!-- MuClient version 4.91 -->

<!-- Plugin "plugin_instance_manager" generated by Plugin Wizard -->

<muclient>
<plugin
   name="plugin_instance_manager"
   id="43d213517f498583ee847c8b"
   language="Lua"
   date_written="2015-06-17 17:23:18"
   requires="4.91"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="tick"
   match="^\*TICK\*$"
   name="ontick"
   regexp="y"
   script="ontick"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
  <trigger
   enabled="y"
   group="kxwt"
   match="^kxwt\_area (?P&lt;areano&gt;\d+) (?P&lt;area&gt;.*?)$"
   name="onarea"
   regexp="y"
   script="onarea"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
  <trigger
   enabled="y"
   group="kxwt"
   match="^kxwt\_rvnum (?P&lt;roomno&gt;\d+)$"
   name="onroom"
   regexp="y"
   script="onroom"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="clear_all"
   match="^inc clear$"
   enabled="y"
   group="instance"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>instances={}
print("all instances have been cleared")</send>
  </alias>
  <alias
   name="clear_area"
   match="^ins clear (?P&lt;areano&gt;\d+)$"
   enabled="y"
   group="instance"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if instances[%&lt;areano&gt;] then
 instances[%&lt;areano&gt;]=nil
 print("area cleared")
else
 print("areano not found.")
end</send>
  </alias>
  <alias
   name="print_instances"
   script="print_instances"
   match="^ins$"
   enabled="y"
   group="instance"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </alias>
  <alias
   name="ins_help"
   match="^ins help$"
   enabled="y"
   group="info"
   regexp="y"
   send_to="2"
   sequence="100"
  >
  <send>ins                - displays instances
ins clear          - clears all instanced areas from the list
ins clear &lt;int&gt;    - clears a spefic area from the list
ins show expired   - toggles showing of expired instances</send>
  </alias>
  <alias
   name="toggle_show_expired"
   match="^ins show expired$"
   enabled="y"
   group="instance"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle("showexpired")</send>
  </alias>
</aliases>

<!--  Script  -->


<script>
<![CDATA[

-- -----------------------------------------------------  
--
--  Name:      instance mananger 
--  Developer: xera
--  Version:   v1.0 beta
--  Date:      17 June 2015
--  
-- -----------------------------------------------------------------

--[[
Syntax
_______


known issues
____________

* Doesn't handle reboots
* Doesn't handle instances shared between groups?

--]]


require "pairsbykeys"
require "lua_table"
require "lua_setting"
require "lua_datetime"


croom={}
instances={}
instance=false
showexpired=true


--***************** Instances manager ********************

function ontick(t, l, w)
 if instance==true and area and tonumber(areano) then
  instances[areano]={area=area, lastupdated=os.time()}
 end
end

function onroom(t, l, w)
 if tonumber(w.roomno) >= 80000 then
  instance=true
 else
  instance=false
 end
end

function onarea(t, l, w)
  area=w.area
  areano=tonumber(w.areano)
  if instance==true then
   instances[areano]={area=area, lastupdated=os.time()}
  end
end


function print_instances()
 if table.count(instances)==0 then
  print("no instances found.")
  return
 end

 print("instances\:")

 local found=false

 for aid, t in pairsByKeys(instances, function (k1, k2)
 return instances[k1].lastupdated > instances[k2].lastupdated
end) do
  local time_diff=os.time()-t.lastupdated
  if time_diff >= 1800 then
   if showexpired==true then
    found=true
    ColourNote("red", "black", string.format("%s %i %s \(EXPIRED\)", sec2fstr(time_diff), aid, t.area))
   end
  else
   found=true
   ColourNote("white", "black", string.format("%s %i %s", sec2fstr(time_diff), aid, t.area))
  end
 end

 if found==false then
  print("no active instances found.")
 end
end
]]>
</script>


</muclient>
